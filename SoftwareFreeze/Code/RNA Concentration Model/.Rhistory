setwd('~/Dropbox/Foreskin/')
myGenesTotal <- read.delim('my_genes_halflife_rpkm.txt',header=T,stringsAsFactors=F)
bobbyGenesTotal <- read.delim('bobby_genes_halflife_rpkm.txt',header=T,stringsAsFactors=F)
plot(myGenesTotal$FPKM,myGenesTotal$avg_abund)
plot(myGenesTotal$FPKM,myGenesTotal$avg_abund)
# fit a line to the points
myline.fit <- lm(myGenesTotal$avg_abund ~ myGenesTotal$FPKM)
# get information about the fit
summary(myline.fit)
# draw the fit line on the plot
abline(myline.fit)
plot(myGenesTotal$FPKM,myGenesTable$halflife)
points(bobbyGenesTotal$FPKM,bobbyGenesTable$halflife,col='magenta')
plot(myGenesTotal$FPKM,myGenesTotal$halflife)
points(bobbyGenesTotal$FPKM,bobbyGenesTotal$halflife,col='magenta')
plot(myGenesTotal$FPKM,myGenesTotal$halflife,pch=19)
points(bobbyGenesTotal$FPKM,bobbyGenesTotal$halflife,col='magenta',pch=19)
bobbyInt <- read.delim('bobby_intron_spot_freq.txt',header=T,stringsAsFactors=F)
bobbyInt
bobbyGenesTotal <- merge(bobbyGenesTotal,bobbyInt)
bobbyGenesTotal
write.table(bobbyGenesTotal,'bobby_genes_halflife_rpkm.txt',quote=F,sep='\t',row.names=F,col.names=T)
plot(bobbyGenesTotal$FPKM,bobbyGenesTotal$neg)
bobbyGenesTotal
bobbyGenesTotal <- bobbyGenesTotal[bobbyGenesTable$FPKM<4000,]
plot(bobbyGenesTotal$FPKM,bobbyGenesTotal$neg)
bobbyGenesTotal <- bobbyGenesTotal[bobbyGenesTotal$FPKM<4000,]
plot(bobbyGenesTotal$FPKM,bobbyGenesTotal$neg)
bobbyGenesTotal <- bobbyGenesTotal[bobbyGenesTotal$FPKM<4000,]
plot(bobbyGenesTotal$FPKM,bobbyGenesTotal$neg)
bobbyGenesTotal <- bobbyGenesTotal[bobbyGenesTotal$FPKM<4000,]
plot(bobbyGenesTotal$FPKM,bobbyGenesTotal$pos)
plot(bobbyGenesTotal$halflife,bobbyGenesTotal$neg)
myInt <- read.delim('my_genes_neg_corr.txt',header=T,StringsAsFactors=F)
myInt <- read.delim('my_genes_neg_corr.txt',header=T,stringsAsFactors=F)
myGenesTotal <- merge(myGenesTotal,myInt)
myGenesTotal
write.table(myGenesTotal,'my_genes_halflife_rpkm.txt',quote=F,sep='\t',row.names=F,col.names=T)
plot(myGenesTotal$neg,myGenesTotal$corr_gapdh)
plot(myGenesTotal$neg,myGenesTotal$corr_gapdh)
myline.fit <- lm(myGenesTotal$corr_gapdh ~ myGenesTotal$neg)
# get information about the fit
summary(myline.fit)
# draw the fit line on the plot
abline(myline.fit)
plot(myGenesTotal$neg,myGenesTotal$corr_gapdh,pch=19)
plot(myGenesTotal$corr_gapdh,myGenesTotal$neg,pch=19)
plot(myGenesTotal$corr_gapdh,myGenesTotal$FPKM,pch=19)
plot(myGenesTotal$corr_gapdh,myGenesTotal$halflife,pch=19)
myGenesTotal
plot(myGenesTotal$neg,myGenesTotal$FPKM,pch=19)
points(bobbyGenesTotal$neg,bobbyGenesTotal$FPKM,col='magenta',pch=19)
plot(myGenesTotal$neg,myGenesTotal$halflife,pch=19)
points(bobbyGenesTotal$neg,bobbyGenesTotal$halflife,col='magenta',pch=19)
topo.loess <- loess (z ~ x * y, topo, degree = 2, span = 0.2)
x <- seq (min (topo$x), max (topo$x), .05)
y <- seq (min (topo$y), max (topo$y), .05)
interpolated <- predict (topo.loess, expand.grid (x = x, y = y))
image (x= x, y= y, z = interpolated, asp = 1)
points (topo)
help loess
loess
setwd('~/Dropbox/Code/RNA Concentration Model/')
data10 <- read.delim('abund10.txt',header=F,stringsAsFactors=F)
data10
data10.loess <- loess (z ~ x * y, topo, degree = 2, span = 0.2)
data10.loess <- loess (z ~ x * y, data10, degree = 2, span = 0.2)
data10.loess <- loess (data10 ~ x * y, data10, degree = 2, span = 0.2)
filled.contour(x = seq(0, 1, length.out = nrow(data10)),
y = seq(0, 1, length.out = ncol(data10)),data10)
filled.contour(x = seq(0, 1, length.out = nrow(data10)),
y = seq(0, 1, length.out = ncol(data10)),
data10)
nrow(data10)
ncol(data10)
filled.contour(x = seq(from=0, to=1, by=1/nrow(data10)),
y = seq(from=0, to=1, by=1/ncol(data10)),
data10)
x <- 10*1:nrow(data10)
y <- 10*1:ncol(data10)
filled.contour(x,y,data10)
type(data10)
is.numeric(data10)
data10
is.numeric(data10[,1])
data10[,1]
is.numeric(data10[1,])
data10[,1]
data10[1,]
colnames(data10) <- c()
is.numeric(data10[1,])
data10[1,]
data10
data10 <- as.matrix(data10)
is.numeric(data10)
x <- 10*1:nrow(data10)
y <- 10*1:ncol(data10)
filled.contour(x,y,data10)
filled.contour(x,y,data10,color.palette=rainbow())
filled.contour(x,y,data10,color.palette=rainbow(6))
filled.contour(x,y,data10,color.pallette=rainbow(6))
filled.contour(x,y,data10,levels=12,color.palette=rainbow(12))
filled.contour(x,y,data10,levels=12,color.palette=cm.colors)
filled.contour(x,y,data10)
filled.contour(x,y,data10,col=c('turquoise','red'))
filled.contour(x,y,data10)
require(graphics)
filled.contour(x,y,data10,color.palette=rainbow(6))
filled.contour(x,y,data10)
RColorBrewer
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
library(RColorBrewer)
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
filled.contour(x,y,data10,col=terrain.colors)
filled.contour(x,y,data10,col=terrain.colors(12))
filled.contour(x,y,data10,col=rainbow(12))
filled.contour(x,y,data10,col=rainbow(18))
filled.contour(x,y,1-data10,col=rainbow(18))
display.brewer.all
colors <- brewer.pal(4, "BuPu")
pal <- colorRampPalette(colors)
filled.contour(x,y,1-data10,col=pal(18))
filled.contour(x,y,data10,col=pal(18))
filled.contour(x,y,data10,col=pal(18),xaxt='n')
library(RColorBrewer)
filled.contour(x,y,data10,col=pal(18),plot.axes='')
filled.contour(x,y,data10,col=pal(18),plot.axes='',axes=F)
filled.contour(x,y,data10,col=pal(18),plot.axes='')
filled.contour(x,y,data10,col=pal(18),plot.axes='',key.axes=F)
filled.contour(x,y,data10,col=pal(18),plot.axes=F)
filled.contour
library(fields)
detach("package:RColorBrewer", unload=TRUE)
install.packages(c("fields", "akima"))
library(fields)
library(akima)
mx = dim(data10)[1]
nx = dim(data10)[2]
matrix(t(matrix(data10,mx,nx*n)),mx*m,nx*n,byrow=T)
matrix(t(matrix(data10,mx,nx)),mx,nx,byrow=T)
mx
nx
?sweep
s <- interp(data10)
k <- arrayInd(4, dim(data10))
k
ncol(data10)
nrow(data10)
filled.contour(x,y,data10,col=pal(18),plot.axes=F)
pal(18)
pal(18)[[3]]
filled.contour(x,y,data10,col=pal(18))
filled.contour(x,y,data10,col=pal(18))
points(40,60,.025)
points(c(40),c(60),.025)
points(c(40),c(60),c(.025))
points(c(40),c(60))
points(c(40),c(60),col=pal(18)[[6]])
points(c(40),c(60),col=pal(18)[[6]],pch=19)
points(c(40),c(60),col=pal(18)[[6]],pch=19,cex=2)
data10
nrow(data10)
x <- 10*1:ncol(data10)
y <- 10*1:nrow(data10)
filled.contour(x,y,data10,col=pal(18))
x <- 1:ncol(data10)
y <- 1:nrow(data10)
filled.contour(x,y,data10,col=pal(18))
filled.contour(y,x,data10,col=pal(18))
filled.contour(x,y,t(data10),col=pal(18))
data100 <- read.delim('abund100.txt',header=F,stringsAsFactors=F)
data100 <- as.matrix(data100)
x <- 1:ncol(data100)
y <- 1:nrow(data100)
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
colors <- brewer.pal(4, "BuPu")
pal <- colorRampPalette(colors)
filled.contour(x,y,t(data100),col=pal(18))
install.packages("calibrate")
library(calibrate)
filled.contour(x,y,t(data100),col=pal(18))
x <- 0.1*1:ncol(data100)
y <- 1:nrow(data100)
filled.contour(x,y,t(data100),col=pal(18))
y <- 4*1:nrow(data100)
filled.contour(x,y,t(data100),col=pal(18))
myGenesTotal
myGenes100 <- myGenesTotal[myGenesTotal$avg_abund>50,]
myGenes100
myGenes100 <- myGenes100[myGenes100<500,]
myGenes100
myGenes100 <- myGenesTotal[myGenesTotal$avg_abund>50,]
myGenes100 <- myGenes100[myGenes100$avg_abund<500,]
myGenes100
points(myGenes100$neg,myGenes100$halflifepch=19,cex=2)
points(myGenes100$neg,myGenes100$halflife,pch=19,cex=2)
myGenes100$neg
points(myGenes100$neg-.5,myGenes100$halflife,pch=19,cex=2)
points(myGenes100$neg-1,myGenes100$halflife,pch=19,cex=2)
mygenes100$neg-1
myGenes100$neg-1
x <- 1:ncol(data100)
filled.contour(x,y,t(data100),col=pal(18))
x <- .1*1:ncol(data100)
filled.contour(x,y,t(data100),col=pal(18))
points(myGenes100$neg,myGenes100$halflife,pch=19,cex=2)
x <- 1:ncol(data100)
filled.contour(x,y,t(data100),col=pal(18))
points(myGenes100$neg,myGenes100$halflife,pch=19,cex=2)
filled.contour(x,y,t(data100),col=pal(18),xlim=range(0,1))
filled.contour(x,y,t(data100),col=pal(18),xlim=range(0,1))
points(myGenes100$neg,myGenes100$halflife,pch=19,cex=2)
filled.contour(x,y,t(data100),col=pal(18))
points(myGenes100$neg,myGenes100$halflife,pch=19,cex=2)
x <- .01*1:ncol(data100)
filled.contour(x,y,t(data100),col=pal(18))
points(myGenes100$neg,myGenes100$halflife,pch=19,cex=2)
x <- .1*1:ncol(data100)
filled.contour(x,y,t(data100),col=pal(18))
points(myGenes100$neg,myGenes100$halflife,pch=19,cex=2)
round(3.14)
myGenes100
round(myGenes100$corr_gapdh*18)
floor(myGenes100$corr_gapdh*18)
pal[floor(myGenes100$corr_gapdh*18)]
pal[[floor(myGenes100$corr_gapdh*18)]]
pal[floor(myGenes100$corr_gapdh*18),]
pal[[13]]
pal(18)[[floor(myGenes100$corr_gapdh*18)]]
pal(18)[[floor(myGenes100$corr_gapdh*18),]]
pal(18)[floor(myGenes100$corr_gapdh*18),]
dim(pal(18))
pal(18)[[13]]
pal(18)
list(pal(18))
as.matrix(pal(18))
as.matrix(pal(18))[floor(myGenes100$corr_gapdh*18),]
points(myGenes100$neg,myGenes100$halflife,pch=19,cex=2,col=as.matrix(pal(18))[round(myGenes100$corr_gapdh*18),])
filled.contour(x,y,t(data100),col=pal(18))
points(myGenes100$neg-.05,myGenes100$halflife,pch=19,cex=2,col=as.matrix(pal(18))[round(myGenes100$corr_gapdh*18),])
points(myGenes100$neg,myGenes100$halflife,cex=2)
filled.contour(x,y,t(data100),col=pal(18))
points(myGenes100$neg-.05,myGenes100$halflife,pch=19,cex=2,col=as.matrix(pal(18))[round(myGenes100$corr_gapdh*18),])
points(myGenes100$neg-.05,myGenes100$halflife,cex=2)
myGenes100
log(24)
log10(24)
log10(10)
x <- .1*1:ncol(data100)
y <- log10(24)*1:nrow(data100)
filled.contour(x,y,t(data100),col=pal(18))
filled.contour(x,y,t(data100),col=pal(18))
points(myGenes100$neg-.05,log10(myGenes100$halflife),pch=19,cex=2,col=as.matrix(pal(18))[round(myGenes100$corr_gapdh*18),])
points(myGenes100$neg-.05,log10(myGenes100$halflife),cex=2)
y <- .1*log10(24)*1:nrow(data100)
filled.contour(x,y,t(data100),col=pal(18))
points(myGenes100$neg-.05,log10(myGenes100$halflife),pch=19,cex=2,col=as.matrix(pal(18))[round(myGenes100$corr_gapdh*18),])
points(myGenes100$neg-.05,log10(myGenes100$halflife),cex=2)
log10(24)
y <- log10(24)*1:nrow(data100)
y
y <- (log10(24)/6)*1:nrow(data100)
filled.contour(x,y,t(data100),col=pal(18))
points(myGenes100$neg-.05,log10(myGenes100$halflife),pch=19,cex=2,col=as.matrix(pal(18))[round(myGenes100$corr_gapdh*18),])
points(myGenes100$neg-.05,log10(myGenes100$halflife),cex=2)
myGenes100
points(myGenes100$neg-.05,log10(myGenes100$halflife),
pch=19,cex=2,col=as.matrix(pal(18))[round(myGenes100$corr_gapdh*18),],
xlab='this')
filled.contour(x,y,t(data100),col=pal(18),xlab='this')
filled.contour(x,y,t(data100),col=pal(18),
xlab='intron spot frequency',
ylab='log(halflife)',
main='Expresison level = 100')
points(myGenes100$neg-.05,log10(myGenes100$halflife),
pch=19,cex=2,col=as.matrix(pal(18))[round(myGenes100$corr_gapdh*18),],)
points(myGenes100$neg-.05,log10(myGenes100$halflife),cex=2)
filled.contour(x,y,t(data100),col=pal(18),cex.lab=2,
xlab='intron spot frequency',
ylab='log(halflife)',
main='Expresison level = 100')
points(myGenes100$neg-.05,log10(myGenes100$halflife),
pch=19,cex=2,col=as.matrix(pal(18))[round(myGenes100$corr_gapdh*18),],)
points(myGenes100$neg-.05,log10(myGenes100$halflife),cex=2)
filled.contour(x,y,t(data100),col=pal(18),cex.lab=1.5,
xlab='intron spot frequency',
ylab='log(halflife)',
main='Expresison level = 100')
points(myGenes100$neg-.05,log10(myGenes100$halflife),
pch=19,cex=2,col=as.matrix(pal(18))[round(myGenes100$corr_gapdh*18),],)
points(myGenes100$neg-.05,log10(myGenes100$halflife),cex=2)
filled.contour(x,y,t(data100),col=pal(18),
xlab='intron spot frequency',
ylab='log(halflife)',
main='Expresison level = 100')
points(myGenes100$neg-.05,log10(myGenes100$halflife),
pch=19,cex=2,col=as.matrix(pal(18))[round(myGenes100$corr_gapdh*18),],)
points(myGenes100$neg-.05,log10(myGenes100$halflife),cex=2)
